-- Get bison/yacc autoconf not be found to be an error


1.0 Proposal 
* stack window

tgdb 0.6.0
----------

* Modify the readline library to be context driven.
* Make all dependencies of TGDB be context driven. ( util library ... )

tgdb 0.5.0
----------

* Change CGDB/TGDB to return to the user the appropriate error codes.
  For instance, a user had "read-only" permission of a2_gdb_init instead
  of saying why TGDB couldn't open the file, or showing the error stack
  trace, CGDB/TGDB just died silently.
* Integrate gdbmi stubs into libtgdb and get gdbmi integrated into tgdb
* Get assembly language working.
* Get tab completion to work through readline ?
   This is *very* difficult to do. I don't know if it is possible.
* Add new structures to types.h that are intended to work with MI
* Write internal documentation
* standardize the way TGDB returns paths to the front end.
   As of know, it returns the full path with the relative path. Then
   it returns a relative path for breakpoints and source files. The front end 
   then needs to look up the full path from the relative path.
* Fix bug in TGDB annotate 2 subsystem where it is returning 
  TGDB_ABSOLUTE_SOURCE_DENIED 3 times when it is started with out a program 
  to debug. Should it even return this command at all?

tgdb 0.5.0 issues raised by developers
---------------------------------------

[ ] Robert Lemmen asked me to remove the config.* files from the releases.
  They are inappropriate to distribute to the user since they are machine 
  dependent.

[x] I received a patch from Santiago Vila that made CGDB work on GNU/HURD.
  I have to remove all occurrences of PATH_MAX. I can apply the patch
  for know, or come up with a better all around approach.

  I removed all occurrences of PATH_MAX and replaced them with FSUTIL_PATH_MAX.
  Ideally, CGDB/TGDB could dynamically create the strings like Santiago 
  pointed out. This should be done eventually.
	
tgdb-0.4.0 and before

* Get in touch with 'Ronald Landheer-Cieslak' about Makefile.am patch to
  build CVS out of the source tree.
* Work on webpage for cgdb/tgdb
* Make sure mueller's wrap searching feature gets documented.
* Standardize tgdb_interface. Maybe change its name. The clients should be
  able to generate and add commands to the command queue here. The commands
  should be made cleaner.
* Change use of 'struct queue' for tgdb_get_command.
* Change all use's of 'struct string' to the proper 'struct ibuf'.
* Remove #define MAXLINE in tgdb_types.h, there should be no hard coded 
  constants in TGDB.
* Comment all tgdb-base headers to be compliant with doxygen
* Get testsuite to install with automake
* Add the return value of gdb when returning with TGDB_QUIT_NORMAL
* Make 1 quit command. Returning a structure defining how GDB was killed.
* Fix tgdb to call the lower level subsystems in an independent way.
* Modify the structures, to only contain things like 'const char *'
* rename type tgdb_command to tgdb_command_type.
* rename type Command to tgdb_command
* Add tgdb_get_command() function to the tgdb functions.
* Implemented new tgdb_list ADT
* Make tgdb use this instead of a queue of items ( breakpoints, frames ... ).
* Return new list type to the user to traverse the stuff.
* Have a tgdb function that can traverse the commands, printing either
   all of them.
* Have a tgdb function that will free all of the memory returned.
* Fix interface to have all functions return an 'int'
* Rework tgdb to be able to support multiple types of debugging 
  (annotate,mi). This involves making a better interface to running 
  commands through the debbuger and through readline.
* Make annotate-two use the new architecture. This way, gdbmi will integrate 
  easier. This is done, however, there is still no clear interface between
  annotate and tgdb-base. This needs to be clearly defined before going 
  trying to add gdbmi.
* Get configure to only build cgdb, and build the driver programs on request.
* Reorganize tgdb to have a separate low level lib for ADT's and for
  util calls like xmalloc. This is so all programs can use it without
  linking to libtgdb.
* Move rlctx_prog to another directory
* Figure out how to make rlctx not require another program to use.
* Add a dejagnu testsuite to the annotate_driver and gdbmi_driver
  This needs to include many more tests.
